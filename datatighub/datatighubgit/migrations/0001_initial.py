# Generated by Django 5.0.6 on 2024-06-05 09:32

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="GitBranch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("branch_name", models.CharField(max_length=500)),
                ("deleted", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="GitRepository",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "datatig_config_fallback_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                ("webhook_code", models.CharField(max_length=500)),
                ("deleted", models.BooleanField(default=False)),
                ("title", models.CharField(blank=True, max_length=500, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("listing_sort_order", models.IntegerField(default=0)),
                ("slug", models.CharField(max_length=500, unique=True)),
                ("git_url", models.CharField(max_length=500)),
                (
                    "primary_branch",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="datatighubgit.gitbranch",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GitBuild",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("started", models.DateTimeField(null=True)),
                ("finished", models.DateTimeField(null=True)),
                ("commit", models.CharField(max_length=40, null=True)),
                ("exception", models.TextField(null=True)),
                ("exception_site_configuration", models.TextField(null=True)),
                ("failed", models.DateTimeField(null=True)),
                (
                    "git_branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datatighubgit.gitbranch",
                    ),
                ),
                (
                    "git_repository",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="datatighubgit.gitrepository",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="gitbranch",
            name="repository",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="datatighubgit.gitrepository",
            ),
        ),
        migrations.AddConstraint(
            model_name="gitbranch",
            constraint=models.UniqueConstraint(
                fields=("repository", "branch_name"),
                name="git unique repository branch_name",
            ),
        ),
    ]
